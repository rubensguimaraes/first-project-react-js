{"version":3,"sources":["services/api.js","components/Container/index.js","pages/Main/styles.js","pages/Main/index.js","pages/Repository/styles.js","pages/Repository/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","Container","styled","div","Form","form","rotate","keyframes","SubmitButton","button","attrs","props","type","disabled","loading","css","List","ul","Main","state","newRepo","repositories","error","handleInputChange","e","setState","target","value","handleSubmit","a","preventDefault","get","response","console","log","data","name","full_name","localStorage","getItem","this","JSON","parse","_","prevState","setItem","stringify","onSubmit","placeholder","onChange","color","size","map","repository","key","to","encodeURIComponent","Component","Loading","Owner","header","IssueList","Pagination","active","Repository","issues","filters","label","selected","filterUsed","page","loadIssues","match","repoName","decodeURIComponent","params","per_page","handleFilterChange","handlePage","Promise","all","src","owner","avatar_url","alt","login","description","filter","issue","String","id","user","href","html_url","title","labels","onClick","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9497967.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 700px;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  margin: 80px auto;\n\n  h1 {\n    font-size: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  svg {\n    margin-right: 10px;\n  }\n`;\nexport default Container;\n","import styled, { keyframes, css } from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n\n  input {\n    flex: 1;\n    border: 1px solid #eee;\n    padding: 10px 15px;\n    border-radius: 4px;\n    font-size: 16px;\n  }\n`;\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const SubmitButton = styled.button.attrs((props) => ({\n  type: 'submit',\n  disabled: props.loading,\n}))`\n  background: #7159c1;\n  border: 0;\n  padding: 0 15px;\n  margin-left: 10px;\n  border-radius: 4px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  ${(props) =>\n    props.loading &&\n    css`\n      svg {\n        animation: ${rotate} 2s linear infinite;\n      }\n    `}\n  svg {\n    margin: 0px !important;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none; /* Retira as bolinhas que ficam no início de uma lista */\n  margin-top: 30px;\n\n  /* Para cada linha o estilo será o seguinte */\n  li {\n    padding: 15px 0; /* Espaçamento acima e abaixo de 15px  */\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between; /* Colocará o título do repositório para a esquerda e o detalhes para esquerda */\n    align-items: center; /* Força o alinhamento vertical do título e do detalhes */\n\n    /* o & indica que pegaremos todos os li, e depois os li seguidos por um li anterior */\n    /* ou seja, aplica a estilização em todos os li, exceto o primeiro. */\n    & + li {\n      border-top: 1px solid #eee; /* Cria uma borda cinza entre cada item (cada repositório digitado) */\n    }\n    /* O a representa o \"detalhes\" */\n    a {\n      color: #7159c1;\n      text-decoration: none; /* retira o undeline */\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\n\nimport { Form, SubmitButton, List } from './styles';\n\nexport default class Main extends Component {\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n    error: false,\n  };\n\n  // carregar os dados do localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n    if (repositories) {\n      this.setState({ repositories: JSON.parse(repositories) });\n    }\n  }\n\n  // salvar os dados no localStorage\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ newRepo: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    try {\n      e.preventDefault();\n\n      this.setState({\n        loading: true,\n      });\n\n      const { newRepo, repositories } = this.state;\n\n      const response = await api.get(`/repos/${newRepo}`);\n\n      console.log(response.data);\n\n      const data = {\n        name: response.data.full_name,\n      };\n\n      this.setState({\n        repositories: [...repositories, data],\n        newRepo: '',\n        loading: false,\n        error: false,\n      });\n      /*\n      e.preventDefault();\n      this.setState({\n        loading: true,\n      });\n      const { newRepo, repositories } = this.state;\n\n      if (repositories.find(repo => repo.name === newRepo)) {\n        throw 'Repositório duplicado';\n      }\n\n      const response = await api.get(`/repos/${newRepo}`);\n\n      const data = {\n        name: response.data.full_name,\n      };\n\n      this.setState({\n        repositories: [...repositories, data],\n        newRepo: '',\n        loading: false,\n        error: false,\n      });\n      */\n    } catch (error) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { newRepo, repositories, loading } = this.state;\n\n    return (\n      <Container>\n        <h1>\n          <FaGithubAlt />\n          Repositórios\n        </h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Adicionar repositório\"\n            value={newRepo}\n            onChange={this.handleInputChange}\n          />\n\n          <SubmitButton loading={loading}>\n            {loading ? ( // se o loading for true mostra o spinner\n              <FaSpinner color=\"#FFF\" size={14} />\n            ) : (\n              // senão mostra o sinal de mais\n              <FaPlus color=\"#FFF\" size={14} />\n            )}\n          </SubmitButton>\n        </Form>\n        <List>\n          {repositories.map((repository) => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n                Detalhes\n              </Link>\n            </li>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  color: #fff; /* Cor branca */\n  font-size: 30px; /* tamanho bem grande */\n  font-weight: bold; /* Negrito */\n  display: flex; /* Cria um flex container a nível de bloco */\n  justify-content: center; /* Alinha orizontalmente ao centro */\n  align-items: center;\n  height: 100vh; /* Altura total da tela */\n`;\n\nexport const Owner = styled.header`\n  display: flex;\n  flex-direction: column; /* Para ficar um item embaixo do outro (imagem, título e descrição) */\n  align-items: center; /* Serão alinhados horizontalmente ao centro */\n\n  a {\n    color: #7159c1;\n    font-size: 16px;\n    text-decoration: none; /* Retira o underline do link */\n  }\n\n  img {\n    width: 120px; /* Para a imagem da logo daremos uma largura de 120px */\n    border-radius: 50%; /* Como nem todas as bordas são arredondadas, isto garante que todas sejam arredondaddas */\n    margin-top: 20px; /* Como teremos um link para voltarmos para a página inicial acima da logo, definimos eeste espaço */\n  }\n\n  h1 {\n    font-size: 24px;\n    margin-top: 10px; /* Distância do nome do repositório para a logo */\n  }\n\n  p {\n    margin-top: 5px;\n    font-size: 14px;\n    color: #666; /* Para a descrição do repositório colocaremos um cinza mais claro */\n    line-height: 1.4; /* Aumenta 40% do line-height tradicional */\n    text-align: center;\n    max-width: 400px; /* Largura máxima de 400px, desta forma ele fará uma quebra automática  */\n  }\n\n  select {\n    flex: 1;\n    margin-top: 15px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 5px 10px;\n  }\n`;\n\nexport const IssueList = styled.ul`\n  padding-top: 30px; /* distancia a lista do header das informações do repositório */\n  margin-top: 30px;\n  border-top: 1px solid #eee; /* Distância da lista à borda */\n  list-style: none;\n\n  li {\n    display: flex; /* Já faz o alinhamento horizontal do que tem no li */\n    padding: 15px 10px;\n    border: 1px solid #eee;\n    border-radius: 4px; /* Cria uma borda para cada issue */\n  }\n\n  /* O & faz a estilização da segunda linha em diante, ou seja, adiciona a margem a partir do 2o item */\n  & + li {\n    margin-top: 10px;\n  }\n\n  /* Estilização da imagem */\n  img {\n    width: 36px; /* Largura de 36px */\n    height: 36px; /* Altura de 36px */\n    border-radius: 50px; /* Deixa a imagem redonda */\n    border: 2px solid #eee; /* Cria uma borda para a imagem */\n  }\n\n  /* A estilização da div compreende o que está por volta do título da issue e do login do autor */\n  div {\n    flex: 1; /* Ocupa todo o espaço possível (Não deixa ultrapassar o limite da tela) */\n    margin-left: 15px; /* Distanciamento da imagem */\n\n    strong {\n      font-size: 16px; /* Estilização do título da issue */\n\n      /* Estilização do título da descrição da issue */\n      a {\n        text-decoration: none;\n        color: #333;\n        /* Define uma cor para quando o usuário passar o mouse por cima da descrição da issue */\n        &:hover {\n          color: #7159c1;\n        }\n      }\n\n      /* Estilização do span que envolve as labels das issues */\n      span {\n        background: #eee;\n        color: #333;\n        border-radius: 2px;\n        font-size: 12px;\n        font-weight: 600;\n        height: 20px;\n        padding: 3px 4px; /* 3 acima e abaixo e 4 nas laterais (direita e esquerda) */\n        margin-left: 10px; /* distância do título */\n      }\n    }\n\n    /* Estilização para o nome do autor da issue */\n    p {\n      margin-top: 5px;\n      font-size: 12px;\n      color: #999; /* Um cinze bem apagado */\n    }\n  }\n`;\n\nexport const IssueFilter = styled.div`\n  margin-top: 30px;\n  display: flex;\n  justify-content: center;\n  button {\n    border-radius: 4px;\n    outline: 0;\n    border: 0;\n    padding: 10px;\n    margin: 0 5px;\n    &:nth-child(${(props) => props.active + 1}) {\n      background: #7159c1;\n      color: #fff;\n    }\n  }\n`;\n\nexport const Pagination = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 30px;\n  padding: 0px 10px;\n\n  span {\n    background-color: #fff;\n  }\n\n  svg {\n    margin-right: 0px;\n    cursor: pointer;\n    color: #fff;\n    background-color: #7159c1;\n    padding: 5px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    height: 30px;\n    width: 30px;\n    &[disabled] {\n      cursor: not-allowed;\n      opacity: 0.6;\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Loading, Owner, IssueList, Pagination } from './styles';\n\nexport default class Repository extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        repository: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n    filters: [\n      { value: 'all', label: 'Todas', selected: true },\n      { value: 'open', label: 'Abertas', selected: false },\n      { value: 'closed', label: 'Fechadas', selected: false },\n    ],\n    filterUsed: 'all',\n    page: 1,\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { filterUsed, page } = this.state;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issues] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: filterUsed,\n          per_page: 5,\n          page,\n        },\n      }),\n    ]); // faz os dois request ao mesmo tempo, e espera as duas terminarem pra seguir\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n  }\n\n  loadIssues = async () => {\n    const { match } = this.props;\n    const { filterUsed, page } = this.state;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const response = await api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: filterUsed,\n        per_page: 5,\n        page,\n      },\n    });\n\n    this.setState({ issues: response.data });\n  };\n\n  handleFilterChange = async (filterUsed) => {\n    await this.setState({ filterUsed, page: 1 });\n    this.loadIssues();\n  };\n\n  handlePage = async (page) => {\n    if (page > 0) {\n      await this.setState({ page });\n      this.loadIssues();\n    }\n  };\n\n  render() {\n    const { repository, issues, loading, filters, page } = this.state;\n    if (loading) {\n      return <Loading>Carregando..</Loading>;\n    }\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos repositórios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n          <select onChange={(e) => this.handleFilterChange(e.target.value)}>\n            {filters.map((filter) => (\n              <option\n                // selected={filter.selected}\n                value={filter.value}\n                key={filter.label}\n              >\n                {filter.label}\n              </option>\n            ))}\n          </select>\n        </Owner>\n        {/* Responsável pela listagem da issues */}\n        <IssueList>\n          {/** Percorremos o array issues */}\n          {/** O primeiro item sempre precisa possuir uma key, informação única da issue */}\n          {/** String transforma em string */}\n          {issues.map((issue) => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              {/** Esta div é para permitir o encapsulamento de vários itens dentro do flex box,\n                  para que eles não fiquem um ao lado do outro */}\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {/** Exibição das labels (que também é um vetor) da issues */}\n                  {issue.labels.map((label) => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n        <Pagination>\n          <FaArrowLeft\n            disabled={page === 1}\n            onClick={() => this.handlePage(page - 1)}\n          />\n          <p>Pagina {page}</p>\n          <FaArrowRight onClick={() => this.handlePage(page + 1)} />\n        </Pagination>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Repository from './pages/Repository';\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/repository/:repository\" component={Repository} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    /* A propriedade box-sizing no CSS faz com que margin, padding e todos os outros espaçamentos\n       que podemos adicionar num elemento, eles sejam sempre somados a largura do elemento.\n       Por exemplo:\n       Se tivermos um elemento com 280px de largura fixa e adicionarmos 10px de padding, ele não passar a ocupar\n       300px, ele continua ocupando 280px, no entanto, o conteúdo desse elemento será exprimido para 260px,\n       que representa 260px + 10px de cada lado.  Isto é muito bom, pois evita algumas quebras de layout*/\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    min-height: 100%;\n  }\n\n  body {\n    background: #7159c1;\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body, input, button {\n    color: #222;\n    font-size: 14px;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}